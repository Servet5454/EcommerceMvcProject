// <auto-generated />
using System;
using ECommerceWithMVC.Models.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECommerceWithMVC.Migrations
{
    [DbContext(typeof(ECommerceDBContext))]
    partial class ECommerceDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ECommerceWithMVC.Models.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("KayitTarih")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Ad = "Admin1",
                            Email = "admin1@mail.com",
                            KayitTarih = new DateTime(2023, 5, 4, 16, 23, 22, 454, DateTimeKind.Local).AddTicks(9003),
                            Phone = "1234567890",
                            Phone2 = "1234567890",
                            Sifre = "123456",
                            Soyad = "Soyad1"
                        },
                        new
                        {
                            Id = 4,
                            Ad = "Admin2",
                            Email = "admin2@mail.com",
                            KayitTarih = new DateTime(2023, 5, 4, 16, 23, 22, 454, DateTimeKind.Local).AddTicks(9006),
                            Phone = "0987654321",
                            Phone2 = "1234567890",
                            Sifre = "654321",
                            Soyad = "Soyad2"
                        });
                });

            modelBuilder.Entity("ECommerceWithMVC.Models.Entities.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("KayitTarihi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Sifre1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sifre2")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelNo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kullanicis");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Ahmet",
                            Email = "ahmet.yilmaz@mail.com",
                            KayitTarihi = new DateTime(2023, 5, 4, 16, 23, 22, 454, DateTimeKind.Local).AddTicks(8844),
                            Sifre1 = "123456",
                            Sifre2 = "123456",
                            Soyad = "Yılmaz",
                            TelNo = "5551112233"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Ayşe",
                            Email = "ayse.kaya@mail.com",
                            KayitTarihi = new DateTime(2023, 5, 4, 16, 23, 22, 454, DateTimeKind.Local).AddTicks(8847),
                            Sifre1 = "678900",
                            Sifre2 = "678900",
                            Soyad = "Kaya",
                            TelNo = "5554445566"
                        });
                });

            modelBuilder.Entity("ECommerceWithMVC.Models.Entities.KullaniciAdres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdresGenel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adresbasligi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Il")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ilce")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<string>("Mahalle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("KullaniciAdress");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdresGenel = "Yenikent Ankara",
                            Adresbasligi = "Ev Adresi",
                            Il = "Ankara",
                            Ilce = "Sincan",
                            KullaniciId = 1,
                            Mahalle = "Yeniken"
                        },
                        new
                        {
                            Id = 2,
                            AdresGenel = "Yenikent Ankara",
                            Adresbasligi = "İş Adresi",
                            Il = "Ankara",
                            Ilce = "Sincan",
                            KullaniciId = 1,
                            Mahalle = "Yeniken"
                        },
                        new
                        {
                            Id = 3,
                            AdresGenel = "Yenikent Ankara",
                            Adresbasligi = "Dükkan Adresi",
                            Il = "Ankara",
                            Ilce = "Sincan",
                            KullaniciId = 1,
                            Mahalle = "Yeniken"
                        },
                        new
                        {
                            Id = 4,
                            AdresGenel = "Yenikent Ankara",
                            Adresbasligi = "Ev Adresi",
                            Il = "Ankara",
                            Ilce = "Sincan",
                            KullaniciId = 2,
                            Mahalle = "Yeniken"
                        },
                        new
                        {
                            Id = 5,
                            AdresGenel = "Yenikent Ankara",
                            Adresbasligi = "İş Adresi",
                            Il = "Ankara",
                            Ilce = "Sincan",
                            KullaniciId = 2,
                            Mahalle = "Yeniken"
                        },
                        new
                        {
                            Id = 6,
                            AdresGenel = "Yenikent Ankara",
                            Adresbasligi = "Dükkan Adresi",
                            Il = "Ankara",
                            Ilce = "Sincan",
                            KullaniciId = 2,
                            Mahalle = "Yeniken"
                        });
                });

            modelBuilder.Entity("ECommerceWithMVC.Models.Model.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aciklama")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EklenmeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Fiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("GuncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("Isim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StokAdedi")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ECommerceWithMVC.Models.Model.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("KategoriIsmi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("ECommerceWithMVC.Models.Entities.KullaniciAdres", b =>
                {
                    b.HasOne("ECommerceWithMVC.Models.Entities.Kullanici", "Kullanici")
                        .WithMany("KullaniciAdress")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("ECommerceWithMVC.Models.Model.ProductCategory", b =>
                {
                    b.HasOne("ECommerceWithMVC.Models.Model.Product", null)
                        .WithOne("ProductCategory")
                        .HasForeignKey("ECommerceWithMVC.Models.Model.ProductCategory", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ECommerceWithMVC.Models.Entities.Kullanici", b =>
                {
                    b.Navigation("KullaniciAdress");
                });

            modelBuilder.Entity("ECommerceWithMVC.Models.Model.Product", b =>
                {
                    b.Navigation("ProductCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
